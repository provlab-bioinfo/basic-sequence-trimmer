/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
    
    withName: SEQKIT_STATS_QC {
        ext.prefix = { "${meta.id}.seqkit" }
        publishDir = [
            path: { "${params.outdir}/${params.label}/stats" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CSVTK_CONCAT_QC {
        publishDir = [
            path: { "${params.outdir}/report" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }            
        ]
    }

    withName: MULTIQC {
        publishDir = [
            path: { "${params.outdir}/report" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') || filename.contains('_data') || filename.contains('_plots') ? null : "$params.label.$filename".replace("_report","") }            
        ]
    }
}   

if(params.folder) { 
    process{
        withName: FOLDERCHECK {
            publishDir = [
                path: { "${params.outdir}/pipeline_info" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }                
            ]
        }
    }
}

if(params.sheet) {
    process {
        withName: SAMPLESHEETCHECK {
            publishDir = [
                path: { "${params.outdir}/pipeline_info" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }                
            ]
        }
    }
}

if(params.platform == "illumina"){  
    process {
        withName: FASTQC_QC {
            ext.args = '--quiet'            
            publishDir = [
                path: { "${params.outdir}/${params.label}/stats/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') || filename.contains('.zip') ? null : filename.replace("_fastqc",".fastqc") },
                pattern: "*"
            ]
        }
    }
}

if(params.platform == "nanopore") {  
    process {
        withName: NANOPLOT_QC {        
            ext.args = { "-c darkblue --tsv_stats --info_in_report --plots hex dot --no_static --prefix ${meta.id}_" } 
            publishDir = [
                path: { "${params.outdir}/${params.label}/stats/" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') || !filename.contains('report.html') ? null : filename.replace("_NanoPlot-report", ".nanoplot") }
            ]
        }
    }
}

